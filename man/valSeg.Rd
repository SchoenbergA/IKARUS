% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classSegVal.R
\name{valSeg}
\alias{valSeg}
\title{validate a Tree Prediction with CrownArea Segments}
\usage{
valSeg(pred, seg, classTree = NULL, reclass = NULL)
}
\arguments{
\item{pred}{RasterLayer - Prediction to validate}

\item{seg}{PolygonLayer - segments with crown areas}

\item{classTree}{numeric - the class representing Trees}

\item{reclass}{optional - numeric value of class to merge into class "trees", for multiple classes to merge use reclass=c(x,y)}
}
\value{
returns the validation score (see details)
}
\description{
calculates the amount of RasterCells for class "trees" which overlap with CrownArea Segments.
}
\details{
\itemize{
\item Validation Score
Accuracy Value: The amount of cells with class "trees" in segments to total cells of trees.
in relation to segments cell without tree cells.
\item reclass prediction
merges additional classes into class "Trees".
}
}
\examples{
# load data
require(caret)
require(CAST)
require(doParallel)
require(raster)
require(IKARUS)
require(mapview)
Stk_path <-system.file("extdata","lau_Stk.tif",package = "IKARUS")
lau_Stk <- raster::stack(Stk_path)
tP_path <-system.file("extdata","lau_TrainPoly.shp",package = "IKARUS")
lau_tP <-rgdal::readOGR(tP_path)
# load segments
seg_path <-system.file("extdata","lau_TreeSeg.shp",package = "IKARUS")
lau_seg <-rgdal::readOGR(seg_path)
#set layer names
names(lau_Stk)<- c("blue","green","red","nir","NDVI","NDVI_sum3","NDVI_sobel3")
### extract values using 'exrct_Tdat' to generate Trainingdataset
tDat <- exrct_Traindat(lau_tP,lau_Stk,"class")
# check for class column and predictor solumns in inout Trainingdataset
head(tDat)
# classification
model1 <- RFclass(tDat = tDat,predCol = "default",predStk = lau_Stk,classCol = "class")
#check model and seg
plot(model1$prediction)
plot(lau_seg)

# test several combinations of classes for tress
tree <- valSeg(  pred=model1$prediction,  seg=lau_seg,  classTree=4,  reclass=NULL)
tnsha <- valSeg(  pred=model1$prediction,  seg=lau_seg,  classTree=4,  reclass=2)
tnshangras <- valSeg(  pred=model1$prediction,  seg=lau_seg,  classTree=4,  reclass=c(2,3))
}
\author{
Andreas SchÃ¶nberg
}
